spring:
  application:
    name: app-service  # 통합 애플리케이션 이름
  profiles:
    active: dev
    include: secret

  datasource:
    primary:
      url: jdbc:mysql://127.0.0.1:3306/ticketon?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      username: root
      password: password
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 50
        minimum-idle: 10
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        leak-detection-threshold: 60000
    readonly:
      url: jdbc:mysql://127.0.0.1:3307/ticketon?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      username: root
      password: password
      driver-class-name: com.mysql.cj.jdbc.Driver
      hikari:
        maximum-pool-size: 30
        minimum-idle: 5
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        leak-detection-threshold: 60000
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        jdbc:
          batch_size: 100
        format_sql: true
        show_sql: true
        use_sql_comments: true
  # H2 Database Configuration (commented out)
  # h2:
  #   console:
  #     enabled: true
  # Previous H2 configuration:
  # datasource:
  #   url: jdbc:h2:file:./app;AUTO_SERVER=TRUE;MODE=MySQL
  #   username: sa
  #   password:
  #   driver-class-name: org.h2.Driver
  config:
    import:
      - "optional:../user/src/main/resources/application.yml"
      - "optional:../seat/src/main/resources/application.yml"
      - "optional:../event/src/main/resources/application.yml"
      - "optional:../event/src/main/resources/application-dev.yml"
      - "optional:../purchase/src/main/resources/application.yml"
      - "optional:../notification/src/main/resources/application.yml"

  # Kafka Configuration for notification events
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: app-notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "org.codenbug.message"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: 9000
  tomcat:
    threads:
      max: 1100
      min-spare: 50
    connection-timeout: 20000
    max-connections: 2000
    accept-count: 500

logging:
  level:
    org.codenbug: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.orm.jpa: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: true

